{
  "Id": "Ke1P",
  "Name": "RESTHost",
  "ServiceData": {
    "Properties": [
      {
        "Id": "After operation",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": true
      },
      {
        "Id": "API definition",
        "Type": "Compiled:String",
        "ValueUsage": "DesignTime",
        "Value": "openapi: 3.0.0\r\ninfo:\r\n  description: Linx Sample API\r\n  version: 1.0.0\r\n  title: Linx Sample API\r\npaths:\r\n  /login:\r\n    post:\r\n      summary: Register a new user\r\n      description: Register a new user\r\n      tags:\r\n        - User and Authentication\r\n      operationId: LoginUser\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/LoginUserRequest'\r\n        description: Details of the new user to register\r\n        required: true\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/UserResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel' \r\n  /me:\r\n    get:\r\n      summary: Retrieve the properties of user object for the signed in user.\r\n      description: Retrieve the properties of user object for the signed in user\r\n      tags:\r\n        - User and Authentication\r\n\r\n      operationId: GetCurrentUser\r\n      responses:\r\n        '200':\r\n          description: OK (209)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/UserResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n  /users:\r\n    get:\r\n      summary: Retrieve the properties of user object for the signed in user.\r\n      description: Retrieve the properties of user object for the signed in user\r\n      tags:\r\n        - Users and Authentication\r\n      operationId: GetUsers\r\n      responses:\r\n        '200':\r\n          description: OK (209)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/UsersResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n    post:\r\n      summary: Register a new user\r\n      description: Register a new user\r\n      tags:\r\n        - User and Authentication\r\n\r\n      operationId: CreateUser\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/NewUserRequest'\r\n        description: Details of the new user to register\r\n        required: true\r\n      responses:\r\n        '201':\r\n          description: Created(201)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/UserResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '400':\r\n          description: Bad Request (400)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n  /users/{id}:\r\n    delete:\r\n      summary: Delete a user\r\n      description: Delete a user\r\n      tags:\r\n        - User and Authentication\r\n\r\n      operationId: DeleteUser\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: User ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content: \r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'    \r\n      \r\n    get:\r\n      summary: Get current user\r\n      description: Gets the currently logged-in user\r\n      tags:\r\n        - User and Authentication\r\n\r\n      operationId: GetUser\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: User ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/UserResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'   \r\n    patch:\r\n      summary: Update a user\r\n      description: Updated user information for a user\r\n      tags:\r\n        - User and Authentication\r\n\r\n      operationId: UpdateUser\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: User ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/UpdateUserRequest'\r\n        description: User details to update. At least **one** field is required.\r\n        required: true\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n  /users/token:\r\n    post:\r\n      summary: Register new JWT token\r\n      description:  Register new JWT token\r\n      tags:\r\n        - User and Authentication\r\n\r\n      operationId: GenerateUserToken\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Token'\r\n  \r\n  /stocks:\r\n    get:\r\n      summary: Retrieve the properties of stock objects for the signed in user.\r\n      description: Retrieve the properties of stock objects for the signed in user\r\n      tags:\r\n        - Stocks and Authentication\r\n\r\n      operationId: GetStocks\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/StocksResponse'\r\n        '401':\r\n          description: Unauthorized (401) \r\n    post:\r\n      summary: Create a new stock\r\n      description: Create a new stock\r\n      tags:\r\n        - Store and Authentication\r\n\r\n      operationId: CreateStock\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/NewStockRequest'\r\n        description: Details of the new stock to create\r\n        required: true\r\n      responses:\r\n        '201':\r\n          description: Created(201)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '400':\r\n          description: Bad Request (400)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n    put:\r\n      summary: Upload stocks\r\n      description: Upload stocks\r\n      tags:\r\n        - Store and Authentication\r\n\r\n      operationId: UploadStocks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/UploadStockRequest'\r\n        description: Details of upload\r\n        required: true\r\n      responses:\r\n        '201':\r\n          description: Created(201)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '400':\r\n          description: Bad Request (400)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n    \r\n  /stocks/{id}:\r\n    delete:\r\n      summary: Delete a stock\r\n      description: Delete a stock\r\n      tags:\r\n        - Stock and Authentication\r\n\r\n      operationId: DeleteStock\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: Stock ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content: \r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'    \r\n    get:\r\n      summary: Get current stock\r\n      description: Gets the currently stock\r\n      tags:\r\n        - Stock and Authentication\r\n\r\n      operationId: GetStock\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: Stock ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Stock'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'   \r\n    patch:\r\n      summary: Update a stock\r\n      description: Updated user information for a stock\r\n      tags:\r\n        - Stock and Authentication\r\n\r\n      operationId: UpdateStock\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: User ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/Stock'\r\n        description: Stock details to update. At least **one** field is required.\r\n        required: true\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n  \r\n  /portfolios:\r\n    get:\r\n      summary: Retrieve the properties of portfolios object for the signed in user.\r\n      description: Retrieve the properties of portfolios object for the signed in user\r\n      tags:\r\n        - Portfolios and Authentication\r\n   \r\n      operationId: GetPortfolios\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PortfoliosResponse'\r\n        '401':\r\n          description: Unauthorized (401) \r\n    post:\r\n      summary: Create a new portfolio\r\n      description: Create a new portfolio\r\n      tags:\r\n        - Store and Authentication\r\n\r\n      operationId: CreatePortfolio\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/NewPortfolioRequest'\r\n        description: Details of the new portfolio to create\r\n        required: true\r\n      responses:\r\n        '201':\r\n          description: Created(201)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '400':\r\n          description: Bad Request (400)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n  /portfolios/{id}:\r\n    delete:\r\n      summary: Delete a portfolios\r\n      description: Delete a portfolios\r\n      tags:\r\n        - Portfolios and Authentication\r\n\r\n      operationId: DeletePortfolios\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: Portfolios ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content: \r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'    \r\n    get:\r\n      summary: Get current portfolio\r\n      description: Gets the currently portfolio\r\n      tags:\r\n        - Portfolio and Authentication\r\n\r\n      operationId: GetPortfolio\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: Portfolio ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PortfolioResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'   \r\n    patch:\r\n      summary: Update a portfolio\r\n      description: Updated portfolio information for a portfolio\r\n      tags:\r\n        - Portfolio and Authentication\r\n\r\n      operationId: UpdatePortfolio\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: Portfolio ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/UpdatePortfolioRequest'\r\n        description: Portfolio details to update. At least **one** field is required.\r\n        required: true\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n  \r\n  /analystics:\r\n    get:\r\n      summary: Retrieve the properties of Analystics object for the signed in user.\r\n      description: Retrieve the properties of Analystics object for the signed in user\r\n      tags:\r\n        - Analystics and Authentication\r\n\r\n      operationId: GetAnalystics\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/AnalysticsResponse'\r\n        '401':\r\n          description: Unauthorized (401) \r\n    post:\r\n      summary: Create a new analystics\r\n      description: Create a new analystics\r\n      tags:\r\n        - Store and Authentication\r\n\r\n      operationId: CreateAnalystics\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/AnalysticRequest'\r\n        description: Details of the new analystics to create\r\n        required: true\r\n      responses:\r\n        '201':\r\n          description: Created(201)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '400':\r\n          description: Bad Request (400)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n  /analystics/{id}:\r\n    delete:\r\n      summary: Delete a Analystics\r\n      description: Delete a Analystics\r\n      tags:\r\n        - Analystics and Authentication\r\n\r\n      operationId: DeleteAnalystics\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: Analystics ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content: \r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'    \r\n    get:\r\n      summary: Get current Analystic\r\n      description: Gets the currently Analystic\r\n      tags:\r\n        - Analystic and Authentication\r\n\r\n      operationId: GetAnalystic\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: Analystic ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/AnalysticResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'   \r\n    patch:\r\n      summary: Update a Analystic\r\n      description: Updated Analystic information for a Analystic\r\n      tags:\r\n        - Analystic and Authentication\r\n\r\n      operationId: UpdateAnalystic\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: Analystic ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/AnalysticRequest'\r\n        description: Analystic details to update. At least **one** field is required.\r\n        required: true\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n  \r\n  /notifications:\r\n    get:\r\n      summary: Retrieve the properties of Notification object for the signed in user.\r\n      description: Retrieve the properties of Notification object for the signed in user\r\n      tags:\r\n        - Notification and Authentication\r\n\r\n      operationId: GetNotifications\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/NotificationsResponse'\r\n        '401':\r\n          description: Unauthorized (401) \r\n    post:\r\n      summary: Create a new Notification\r\n      description: Create a new Notification\r\n      tags:\r\n        - Store and Authentication\r\n\r\n      operationId: CreateNotification\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/NotificationRequest'\r\n        description: Details of the new Notification to create\r\n        required: true\r\n      responses:\r\n        '201':\r\n          description: Created(201)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '400':\r\n          description: Bad Request (400)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n  /notifications/{id}:\r\n    delete:\r\n      summary: Delete a Notification\r\n      description: Delete a Notification\r\n      tags:\r\n        - Notification and Authentication\r\n\r\n      operationId: DeleteNotification\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: Notification ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content: \r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'    \r\n    get:\r\n      summary: Get current Notification\r\n      description: Gets the currently Notification\r\n      tags:\r\n        - Notification and Authentication\r\n\r\n      operationId: GetNotification\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: Notification ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/NotificationResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'   \r\n  \r\n  /pricehistory:\r\n    get:\r\n      summary: Retrieve the properties of PriceHistory object for the signed in user.\r\n      description: Retrieve the properties of PriceHistory object for the signed in user\r\n      tags:\r\n        - PriceHistory and Authentication\r\n\r\n      operationId: GetPriceHistorys\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PriceHistorysResponse'\r\n        '401':\r\n          description: Unauthorized (401) \r\n    post:\r\n      summary: Create a new PriceHistory\r\n      description: Create a new PriceHistory\r\n      tags:\r\n        - PriceHistory and Authentication\r\n\r\n      operationId: CreatePriceHistory\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PriceHistoryRequest'\r\n        description: Details of the new analystics to create\r\n        required: true\r\n      responses:\r\n        '201':\r\n          description: Created(201)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '400':\r\n          description: Bad Request (400)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'\r\n  /pricehistory/{id}:\r\n    delete:\r\n      summary: Delete a PriceHistory\r\n      description: Delete a PriceHistory\r\n      tags:\r\n        - PriceHistory and Authentication\r\n\r\n      operationId: DeletePriceHistory\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: PriceHistory ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n\r\n      responses:\r\n        '204':\r\n          description: No Content (204)\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content: \r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'    \r\n    get:\r\n      summary: Get current PriceHistory\r\n      description: Gets the currently PriceHistory\r\n      tags:\r\n        - PriceHistory and Authentication\r\n\r\n      operationId: GetPriceHistory\r\n      parameters:\r\n        - name: id\r\n          in: path\r\n          description: PriceHistory ID\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '200':\r\n          description: OK (200)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PriceHistoryResponse'\r\n        '401':\r\n          description: Unauthorized (401)\r\n        '404':\r\n          description: Not found (404)\r\n        '422':\r\n          description: Unexpected error (422)\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/GenericErrorModel'   \r\n    \r\ncomponents:\r\n#Secuirty shemes available to appy to methods\r\n  securitySchemes:\r\n    BasicAuth:\r\n      type: http\r\n      scheme: basic\r\n    Token:\r\n      type: http\r\n      scheme: bearer\r\n    ApiKeyAuth_query:\r\n      type: apiKey\r\n      in: query\r\n      name: X-API-Key\r\n    ApiKeyAuth_header:\r\n      type: apiKey\r\n      in: header\r\n      name: X-API-Key\r\n    ApiKeyAuth_cookie:\r\n      type: apiKey\r\n      in: cookie\r\n      name: X-API-Key\r\n    \r\n            \r\n  #Objects used in requests, responses\r\n  schemas:\r\n    LoginUser:\r\n      type: object\r\n      properties:\r\n        email:\r\n          type: string\r\n        password:\r\n          type: string\r\n          format: password\r\n      required:\r\n        - email\r\n          password\r\n    NewUser:\r\n      type: object\r\n      properties:\r\n        username:\r\n          type: string\r\n        email:\r\n          type: string\r\n        password:\r\n          type: string\r\n          format: password\r\n        firstname:\r\n          type: string\r\n        lastname:\r\n          type: string\r\n      required:\r\n        - username\r\n          email\r\n          password\r\n          firstname\r\n          lastname\r\n    NewUserRequest:\r\n      type: object\r\n      properties:\r\n        user:\r\n          $ref: '#/components/schemas/NewUser'\r\n      required:\r\n        - user\r\n    LoginUserRequest:\r\n      type: object\r\n      properties:\r\n        user:\r\n          $ref: '#/components/schemas/LoginUser'\r\n      required:\r\n        - user\r\n    User:\r\n      type: object\r\n      properties:\r\n        email:\r\n          type: string\r\n        username:\r\n          type: string\r\n        id:\r\n          type: integer\r\n        firstname:\r\n          type: string\r\n        lastname:\r\n          type: string\r\n        api_key:\r\n          type: string\r\n      required:\r\n        - email\r\n        - username\r\n    UserResponse:\r\n      type: object\r\n      properties:\r\n        user:\r\n          $ref: '#/components/schemas/User'\r\n      required:\r\n        - user\r\n    UpdateUser:\r\n      type: object\r\n      properties:\r\n        email:\r\n          type: string\r\n        firstname:\r\n          type: string\r\n        lastname:\r\n          type: string\r\n    UsersResponse:\r\n      type: array\r\n      items:\r\n            $ref: '#/components/schemas/User'\r\n    UpdateUserRequest:\r\n      type: object\r\n      properties:\r\n        user:\r\n          $ref: '#/components/schemas/UpdateUser'\r\n      required:\r\n        - user\r\n    Token:\r\n      type: object\r\n      properties:\r\n        access_token:\r\n          type: string\r\n        expires_in:\r\n          type: integer\r\n        token_type:\r\n          type: string\r\n    \r\n    Stock:\r\n      type: object\r\n      properties:\r\n        name: \r\n          type: string\r\n        price:\r\n          type: number\r\n        prev_price:\r\n          type: number\r\n        netvar:\r\n          type: number\r\n        change:\r\n          type: number\r\n        beta:\r\n          type: number\r\n        volume:\r\n          type: number\r\n        updated_time: \r\n          type: string\r\n          format: date-time\r\n          description: Creation date and time\r\n          example: \"2021-06-20 01:02:03 \"\r\n      required:\r\n        - name \r\n        - price\r\n        - netvar\r\n    StockArray:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/Stock'\r\n    UploadStockRequest:\r\n      type: object\r\n      properties:\r\n        stocks:\r\n          $ref: '#/components/schemas/StockArray'\r\n      required:\r\n        - stocks\r\n    NewStockRequest:\r\n      type: object\r\n      properties:\r\n        stock:\r\n          $ref: '#/components/schemas/Stock'\r\n      required:\r\n        - stock\r\n    StockResponse:\r\n      type: object\r\n      properties:\r\n        name: \r\n          type: string\r\n        price:\r\n          type: number\r\n        prev_price:\r\n          type: number\r\n        netvar:\r\n          type: number\r\n        change:\r\n          type: number\r\n        beta:\r\n          type: number\r\n        volume:\r\n          type: number\r\n        id:\r\n          type: integer\r\n    StocksResponse:\r\n      type: array\r\n      items:\r\n            $ref: '#/components/schemas/StockResponse'\r\n    \r\n    Portfolio:\r\n      type: object\r\n      properties:\r\n        stock: \r\n          type: string          \r\n        qty: \r\n          type: number\r\n      required:\r\n        - stock\r\n        - qty\r\n    NewPortfolioRequest:\r\n      type: object\r\n      properties:\r\n        portfolio:\r\n          $ref: '#/components/schemas/Portfolio'\r\n      required:\r\n        - portfolio\r\n    UpdatePortfolioRequest:\r\n      type: object\r\n      properties:\r\n        qty:\r\n          type: number\r\n    PortfolioResponse:\r\n      type: object\r\n      properties:\r\n        id: \r\n          type: integer\r\n        name:\r\n          type: string\r\n        price:\r\n          type: number\r\n        netvar:\r\n          type: number\r\n        qty:\r\n          type: number\r\n\r\n      required:\r\n        - portfolio\r\n    PortfoliosResponse:\r\n      type: array\r\n      items:\r\n            $ref: '#/components/schemas/PortfolioResponse'\r\n    \r\n    Analystic:\r\n      type: object\r\n      properties:\r\n        stock: \r\n          type: integer\r\n        buy: \r\n          type: number\r\n        sell:\r\n          type: number\r\n    AnalysticRequest:\r\n      type: object\r\n      properties:\r\n        analystic:\r\n          $ref: '#/components/schemas/Analystic'\r\n      required:\r\n        - analystic\r\n    AnalysticResponse:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n        stock: \r\n          type: integer\r\n        buy: \r\n          type: number\r\n        sell:\r\n          type: number\r\n        name:\r\n          type: string\r\n        price:\r\n          type: number\r\n        netvar:\r\n          type: number\r\n    AnalysticsResponse:\r\n      type: array\r\n      items:\r\n            $ref: '#/components/schemas/AnalysticResponse'\r\n        \r\n    PriceHistory:\r\n      type: object\r\n      properties:\r\n        stock: \r\n          type: string\r\n        price: \r\n          type: number\r\n        netvar:\r\n          type: number\r\n        updeted_time:\r\n          type: string\r\n          format: date\r\n          description: Creation date and time\r\n          \r\n    PriceHistoryRequest:\r\n      type: object\r\n      properties:\r\n        pricehistory:\r\n          $ref: '#/components/schemas/PriceHistory'\r\n      required:\r\n        - pricehistory\r\n    PriceHistoryResponse:\r\n      type: object\r\n      properties:\r\n        stock:\r\n          type: string\r\n        price:\r\n          type: number\r\n        netvar:\r\n          type: number\r\n        updated_time:\r\n          type: string\r\n          format: date\r\n          description: Creation date and time\r\n          example: \"2021-06-20 01:02:03 \"\r\n    PriceHistorysResponse:\r\n      type: array\r\n      items:\r\n            $ref: '#/components/schemas/PriceHistoryResponse'\r\n    \r\n    Notification:\r\n      type: object\r\n      properties:\r\n        notification: \r\n          type: string\r\n        updated_time: \r\n          type: string\r\n          format: date-time\r\n          description: Creation date and time\r\n    NotificationRequest:\r\n      type: object\r\n      properties:\r\n        notification:\r\n          $ref: '#/components/schemas/Notification'\r\n    NotificationResponse:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n        notification: \r\n          type: string\r\n        updated_time: \r\n          type: string\r\n          format: date-time\r\n          description: Creation date and time\r\n          example: \"2021-06-20 01:02:03 \"\r\n    NotificationsResponse:\r\n      type: array\r\n      items:\r\n            $ref: '#/components/schemas/NotificationResponse'\r\n     \r\n    GenericErrorModel:\r\n      type: object\r\n      properties:\r\n        summary:\r\n          type: string\r\n        errors:\r\n              type: array\r\n              items:\r\n                type: string\r\n\r\n      required:\r\n        - errors\r\n"
      },
      {
        "Id": "API doc security scheme",
        "Type": "Compiled:String",
        "ValueUsage": "DesignTime",
        "Value": ""
      },
      {
        "Id": "API documentation",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.ApiDocumentation.ApiDocumentationType, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": "SwaggerUI"
      },
      {
        "Id": "Auth config",
        "Type": "Compiled:System.Collections.Generic.List`1[[Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.AspNetCore.Authentication.AuthenticationConfiguration, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": "[{\"SchemeName\":\"Token\",\"SchemeType\":\"HttpBearer\",\"Properties\":[{\"Name\":\"Secret\",\"Value\":\"\"}]}]",
        "ValueType": "String"
      },
      {
        "Id": "Authenticate",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": true
      },
      {
        "Id": "Base URI",
        "Type": "Compiled:String",
        "ValueUsage": "RuntimeRead",
        "Value": {
          "Expression": "$.Settings.api_base_uri +\"/api\"",
          "CompiledExpression": "={0}+\"/api\"",
          "Type": "Compiled:String"
        },
        "ValueType": "Linx.CSharpExpression"
      },
      {
        "Id": "Before operation",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": true
      },
      {
        "Id": "CORS origins",
        "Type": "Compiled:System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": null
      },
      {
        "Id": "Max connections",
        "Type": "Compiled:System.Nullable`1[[System.Int64, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": null
      },
      {
        "Id": "Max request size",
        "Type": "Compiled:System.Nullable`1[[System.Int64, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": 3000,
        "ValueType": "Int64"
      },
      {
        "Id": "Operation events",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.OperationEventCollection, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": [
          {
            "Name": "OperationEvents_Authenticate"
          },
          {
            "Name": "OperationEvents_BeforeOperation"
          },
          {
            "Name": "OperationEvents_AfterOperation"
          }
        ]
      },
      {
        "Id": "Operations",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationCollection, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": [
          {
            "Name": "LoginUser",
            "HttpMethod": "POST",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "GetCurrentUser",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "GetUsers",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "CreateUser",
            "HttpMethod": "POST",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "DeleteUser",
            "HttpMethod": "DELETE",
            "ResponseContentType": null
          },
          {
            "Name": "GetUser",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "UpdateUser",
            "HttpMethod": "PATCH",
            "ResponseContentType": null
          },
          {
            "Name": "GenerateUserToken",
            "HttpMethod": "POST",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "GetStocks",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "CreateStock",
            "HttpMethod": "POST",
            "ResponseContentType": null
          },
          {
            "Name": "UploadStocks",
            "HttpMethod": "PUT",
            "ResponseContentType": null
          },
          {
            "Name": "DeleteStock",
            "HttpMethod": "DELETE",
            "ResponseContentType": null
          },
          {
            "Name": "GetStock",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "UpdateStock",
            "HttpMethod": "PATCH",
            "ResponseContentType": null
          },
          {
            "Name": "GetPortfolios",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "CreatePortfolio",
            "HttpMethod": "POST",
            "ResponseContentType": null
          },
          {
            "Name": "DeletePortfolios",
            "HttpMethod": "DELETE",
            "ResponseContentType": null
          },
          {
            "Name": "GetPortfolio",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "UpdatePortfolio",
            "HttpMethod": "PATCH",
            "ResponseContentType": null
          },
          {
            "Name": "GetAnalystics",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "CreateAnalystics",
            "HttpMethod": "POST",
            "ResponseContentType": null
          },
          {
            "Name": "DeleteAnalystics",
            "HttpMethod": "DELETE",
            "ResponseContentType": null
          },
          {
            "Name": "GetAnalystic",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "UpdateAnalystic",
            "HttpMethod": "PATCH",
            "ResponseContentType": null
          },
          {
            "Name": "GetNotifications",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "CreateNotification",
            "HttpMethod": "POST",
            "ResponseContentType": null
          },
          {
            "Name": "DeleteNotification",
            "HttpMethod": "DELETE",
            "ResponseContentType": null
          },
          {
            "Name": "GetNotification",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "GetPriceHistorys",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          },
          {
            "Name": "CreatePriceHistory",
            "HttpMethod": "POST",
            "ResponseContentType": null
          },
          {
            "Name": "DeletePriceHistory",
            "HttpMethod": "DELETE",
            "ResponseContentType": null
          },
          {
            "Name": "GetPriceHistory",
            "HttpMethod": "GET",
            "ResponseContentType": "application/json"
          }
        ]
      },
      {
        "Id": "Show server errors",
        "Type": "Compiled:Boolean",
        "ValueUsage": "RuntimeRead",
        "Value": true
      }
    ],
    "Events": [
      {
        "Id": "CreateAnalystics",
        "Name": "CreateAnalystics",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:6gw3"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:5zFm"
      },
      {
        "Id": "CreateNotification",
        "Name": "CreateNotification",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:CQlf"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:GFZ5"
      },
      {
        "Id": "CreatePortfolio",
        "Name": "CreatePortfolio",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:MipU"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:yngF"
      },
      {
        "Id": "CreatePriceHistory",
        "Name": "CreatePriceHistory",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:739t"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:U6mG"
      },
      {
        "Id": "CreateStock",
        "Name": "CreateStock",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:mSkM"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:u2CE"
      },
      {
        "Id": "CreateUser",
        "Name": "CreateUser",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:PeJt"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:BEPh"
      },
      {
        "Id": "DeleteAnalystics",
        "Name": "DeleteAnalystics",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:m46s"
      },
      {
        "Id": "DeleteNotification",
        "Name": "DeleteNotification",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:sJsE"
      },
      {
        "Id": "DeletePortfolios",
        "Name": "DeletePortfolios",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:toIl"
      },
      {
        "Id": "DeletePriceHistory",
        "Name": "DeletePriceHistory",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:HTRJ"
      },
      {
        "Id": "DeleteStock",
        "Name": "DeleteStock",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:SbUe"
      },
      {
        "Id": "DeleteUser",
        "Name": "DeleteUser",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:5hfY"
      },
      {
        "Id": "GenerateUserToken",
        "Name": "GenerateUserToken",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:DY6D"
      },
      {
        "Id": "GetAnalystic",
        "Name": "GetAnalystic",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:Ks2P"
      },
      {
        "Id": "GetAnalystics",
        "Name": "GetAnalystics",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:byvU"
      },
      {
        "Id": "GetCurrentUser",
        "Name": "GetCurrentUser",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:WjzP"
      },
      {
        "Id": "GetNotification",
        "Name": "GetNotification",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:vwUD"
      },
      {
        "Id": "GetNotifications",
        "Name": "GetNotifications",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:Ojen"
      },
      {
        "Id": "GetPortfolio",
        "Name": "GetPortfolio",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:6vff"
      },
      {
        "Id": "GetPortfolios",
        "Name": "GetPortfolios",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:s5yV"
      },
      {
        "Id": "GetPriceHistory",
        "Name": "GetPriceHistory",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:87Gd"
      },
      {
        "Id": "GetPriceHistorys",
        "Name": "GetPriceHistorys",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:r9ld"
      },
      {
        "Id": "GetStock",
        "Name": "GetStock",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:M2YB"
      },
      {
        "Id": "GetStocks",
        "Name": "GetStocks",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:MPm7"
      },
      {
        "Id": "GetUser",
        "Name": "GetUser",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:zMoM"
      },
      {
        "Id": "GetUsers",
        "Name": "GetUsers",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:g8Xy"
      },
      {
        "Id": "LoginUser",
        "Name": "LoginUser",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:luzk"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:BRnL"
      },
      {
        "Id": "OperationEvents_AfterOperation",
        "Name": "OperationEvents_AfterOperation",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Data.Out.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
      },
      {
        "Id": "OperationEvents_Authenticate",
        "Name": "OperationEvents_Authenticate",
        "Parameters": [
          {
            "Name": "AuthenticationData",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Authenticate.AuthenticateEventInputData, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Authenticate.AuthenticateEventOutput, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
      },
      {
        "Id": "OperationEvents_BeforeOperation",
        "Name": "OperationEvents_BeforeOperation",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.Data.Out.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
      },
      {
        "Id": "UpdateAnalystic",
        "Name": "UpdateAnalystic",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "body",
            "TypeReference": "Generated:muQ3"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:IbgX"
      },
      {
        "Id": "UpdatePortfolio",
        "Name": "UpdatePortfolio",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "body",
            "TypeReference": "Generated:0Znw"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:X2eN"
      },
      {
        "Id": "UpdateStock",
        "Name": "UpdateStock",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "body",
            "TypeReference": "Generated:o1PR"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:SsI2"
      },
      {
        "Id": "UpdateUser",
        "Name": "UpdateUser",
        "Parameters": [
          {
            "Name": "id",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "body",
            "TypeReference": "Generated:Af7S"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:6AeM"
      },
      {
        "Id": "UploadStocks",
        "Name": "UploadStocks",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:yIQt"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.3.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:xKms"
      }
    ]
  },
  "ServiceType": "REST:RESTHost",
  "Events": [
    "CreateUser.event",
    "GetUser.event",
    "UpdateUser.event",
    "GenerateUserToken.event",
    "GetCurrentUser.event",
    "DeleteUser.event",
    "OperationEvents_Authenticate.event",
    "LoginUser.event",
    "GetPortfolio.event",
    "GetStock.event",
    "UpdateStock.event",
    "DeletePortfolios.event",
    "DeleteStock.event",
    "UpdatePortfolio.event",
    "GetStocks.event",
    "GetPortfolios.event",
    "GetAnalystic.event",
    "DeleteAnalystics.event",
    "GetAnalystics.event",
    "UpdateAnalystic.event",
    "CreateStock.event",
    "CreatePortfolio.event",
    "GetUsers.event",
    "CreateAnalystics.event",
    "GetPriceHistory.event",
    "GetNotification.event",
    "DeletePriceHistory.event",
    "GetNotifications.event",
    "DeleteNotification.event",
    "GetPriceHistorys.event",
    "CreatePriceHistory.event",
    "CreateNotification.event",
    "OperationEvents_BeforeOperation.event",
    "OperationEvents_AfterOperation.event",
    "UploadStocks.event"
  ]
}